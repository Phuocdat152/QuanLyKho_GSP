<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Luu.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>